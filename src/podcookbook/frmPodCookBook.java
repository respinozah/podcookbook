/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package podcookbook;

import javax.swing.*;
import java.awt.*;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
/**
 *
 * @author espiraul
 */
public class frmPodCookBook extends javax.swing.JFrame {

    private Manager manager = new Manager();
    
    /** Creates new form frmPodCookBook */
    public frmPodCookBook() {
        initComponents();
        setLists();
        setTabs();
        lblStatus.setText("No command has been executed");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbServers = new javax.swing.JComboBox<>();
        tabActions = new javax.swing.JTabbedPane();
        pnlKubernetes = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstKubernetes = new javax.swing.JList<>();
        pnlSecurity = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstTHSecurity = new javax.swing.JList<>();
        pnlKafka = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        lstKafka = new javax.swing.JList<>();
        pnlNodes = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        lstNodes = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txaConsole = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txaCommand = new javax.swing.JTextArea();
        btnExecute = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();
        cmdManageServers = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pod Cookbook for XXX test environment");
        setName("frmPodCookBook"); // NOI18N
        setResizable(false);

        cmbServers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lstKubernetes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane3.setViewportView(lstKubernetes);

        org.jdesktop.layout.GroupLayout pnlKubernetesLayout = new org.jdesktop.layout.GroupLayout(pnlKubernetes);
        pnlKubernetes.setLayout(pnlKubernetesLayout);
        pnlKubernetesLayout.setHorizontalGroup(
            pnlKubernetesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        pnlKubernetesLayout.setVerticalGroup(
            pnlKubernetesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );

        tabActions.addTab("Kubernetes", pnlKubernetes);

        lstTHSecurity.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(lstTHSecurity);

        org.jdesktop.layout.GroupLayout pnlTHSecurityLayout = new org.jdesktop.layout.GroupLayout(pnlTHSecurity);
        pnlTHSecurity.setLayout(pnlTHSecurityLayout);
        pnlTHSecurityLayout.setHorizontalGroup(
            pnlTHSecurityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        pnlTHSecurityLayout.setVerticalGroup(
            pnlTHSecurityLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );

        tabActions.addTab("Security", pnlTHSecurity);

        lstKafka.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(lstKafka);

        org.jdesktop.layout.GroupLayout pnlKafkaLayout = new org.jdesktop.layout.GroupLayout(pnlKafka);
        pnlKafka.setLayout(pnlKafkaLayout);
        pnlKafkaLayout.setHorizontalGroup(
            pnlKafkaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        pnlKafkaLayout.setVerticalGroup(
            pnlKafkaLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );

        tabActions.addTab("Kafka", pnlKafka);

        lstNodes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(lstNodes);

        org.jdesktop.layout.GroupLayout pnlNodesLayout = new org.jdesktop.layout.GroupLayout(pnlNodes);
        pnlNodes.setLayout(pnlNodesLayout);
        pnlNodesLayout.setHorizontalGroup(
            pnlNodesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 713, Short.MAX_VALUE)
        );
        pnlNodesLayout.setVerticalGroup(
            pnlNodesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
        );

        tabActions.addTab("Nodes", pnlNodes);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Output:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Command:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("Master server:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Test:");

        txaConsole.setColumns(20);
        txaConsole.setRows(5);
        jScrollPane1.setViewportView(txaConsole);
        txaConsole.getAccessibleContext().setAccessibleName("txaConsole");

        txaCommand.setColumns(20);
        txaCommand.setRows(5);
        jScrollPane2.setViewportView(txaCommand);

        btnExecute.setText("Test");
        btnExecute.setToolTipText("");
        btnExecute.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExecuteActionPerformed(evt);
            }
        });

        lblStatus.setText("jLabel5");

        cmdManageServers.setText("Manage servers");
        cmdManageServers.setToolTipText("Manage servers");
        cmdManageServers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdManageServersActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel3)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel4)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel2))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jScrollPane1)
                    .add(layout.createSequentialGroup()
                        .add(tabActions, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 718, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnExecute, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 192, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(cmbServers, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 345, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cmdManageServers, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 134, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane2)
                    .add(lblStatus, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel3)
                    .add(cmbServers, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdManageServers))
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(tabActions, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 143, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(75, 75, 75)
                        .add(btnExecute, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 39, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(layout.createSequentialGroup()
                        .add(27, 27, 27)
                        .add(jLabel4)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel2)
                    .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 436, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(lblStatus)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabActions.getAccessibleContext().setAccessibleName("tabActions");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnExecuteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExecuteActionPerformed
        btnExecute.setEnabled(false);
        setCursor(new Cursor(Cursor.WAIT_CURSOR));
        if(!selectedAction().isEmpty()){
            executeCommand();
        }
        else{
            lblStatus.setText("");
        }
        btnExecute.setEnabled(true);
        txaConsole.setCaretPosition(0);
        setCursor(new Cursor(Cursor.DEFAULT_CURSOR));
    }//GEN-LAST:event_btnExecuteActionPerformed

    private void cmdManageServersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdManageServersActionPerformed
        frmServersList serversManager = new frmServersList();
        serversManager.setPodCookbook(this);
        serversManager.setVisible(true);
    }//GEN-LAST:event_cmdManageServersActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPodCookBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPodCookBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPodCookBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPodCookBook.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPodCookBook().setVisible(true);
            }
        });
    }
    
    private void setTabs(){
        lstKubernetes.setModel(new DefaultComboBoxModel(manager.getAvailableActions("Kubernetes")));
        lstTHSecurity.setModel(new DefaultComboBoxModel(manager.getAvailableActions("Security")));
        lstKafka.setModel(new DefaultComboBoxModel(manager.getAvailableActions("Kafka")));
        lstNodes.setModel(new DefaultComboBoxModel(manager.getAvailableActions("Nodes")));
        lstKubernetes.setSelectedIndex(0);
    }

    public void setLists(){
        cmbServers.setModel(new DefaultComboBoxModel(manager.getServersAddressList()));
    }

    private String selectedAction(){
        String action = "";
        switch (tabActions.getSelectedIndex()){
            case 0: //Kubernetes
                action = lstKubernetes.getSelectedValue().toString();
                break;
            case 1: //Security
                action = lstTHSecurity.getSelectedValue().toString();
                break;
            case 2: //Kafka
                action = lstKafka.getSelectedValue().toString();
                break;
            case 3: //Nodes
                action = lstNodes.getSelectedValue().toString();
                break;
            default:
                action = "";
                break;
        }
        return action;
    }
        
    private void executeCommand(){
        txaConsole.setText(manager.executeAction((String) cmbServers.getSelectedItem(), (String) selectedAction()));
        txaCommand.setText(manager.getLastCommand());
        copyOutputToClipboard();
    }

    private void copyOutputToClipboard(){
        StringSelection copied = new StringSelection(txaConsole.getText());
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(copied, copied);
        lblStatus.setText("The output for "+ selectedAction() + " has been copied to the clipboard.");
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExecute;
    private javax.swing.JComboBox<String> cmbServers;
    private javax.swing.JButton cmdManageServers;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JList<String> lstKafka;
    private javax.swing.JList<String> lstKubernetes;
    private javax.swing.JList<String> lstNodes;
    private javax.swing.JList<String> lstSecurity;
    private javax.swing.JPanel pnlKafka;
    private javax.swing.JPanel pnlKubernetes;
    private javax.swing.JPanel pnlNodes;
    private javax.swing.JPanel pnlSecurity;
    private javax.swing.JTabbedPane tabActions;
    private javax.swing.JTextArea txaCommand;
    private javax.swing.JTextArea txaConsole;
    // End of variables declaration//GEN-END:variables

}